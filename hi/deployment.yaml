---
apiVersion: v1
kind: Namespace
metadata:
  name: cluster-mania

#---
#apiVersion: batch/v1
#kind: Job
#metadata:
#  name: batch-job
#spec:
#  template:
#    metadata:
#      labels:
#        app: batch-job
#    spec:
#      restartPolicy: OnFailure
#      containers:
#        - name: main
#          image: luksa/batch-job

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: ping-hi
  namespace: cluster-mania
  labels:
    app: hi
    stage: dev
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: ping-hi
              image: busybox
              args:
                - /bin/sh
                - -c
                - wget -O - http://hi/hi/ping
          restartPolicy: OnFailure

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hi-config
  namespace: cluster-mania
data:
  FOO: "42"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hi-deployment
  namespace: cluster-mania
  labels:
    app: hi
    stage: dev
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hi
      stage: dev
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
  template:
    metadata:
      namespace: cluster-mania
      labels:
        app: hi
        stage: dev
    spec:
      containers:
        - image: eu.gcr.io/cluster-maniaz/hi:latest
          name: hi
          envFrom:
            - configMapRef:
                name: hi-config
          ports:
            -  name: http
               containerPort: 8080
          livenessProbe:
            initialDelaySeconds: 1
            httpGet:
              path: /livez
              port: 8080
          readinessProbe:
            initialDelaySeconds: 1
            httpGet:
              path: /readyz
              port: 8080


---
apiVersion: v1
kind: Service
metadata:
  name: hi
  namespace: cluster-mania
  labels:
    app: hi
    stage: dev
spec:
  type: NodePort
  selector:
    app: hi
    stage: dev
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: cloud-maniaz-ingress
  namespace: cluster-mania
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "ingress-ip"
    networking.gke.io/managed-certificates: "cluster-mania-cert"
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: hi
              servicePort: 80
...
